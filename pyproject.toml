[project]
name = "news-summary"
version = "0.1.0"
description = ""
authors = [{ name = "wsgggws", email = "wsgggws@gmail.com" }]
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
  "fastapi (>=0.68.0)",
  "uvicorn (>=0.15.0)",
  "python-jose[cryptography] (>=3.4.0,<4.0.0)",
  "pydantic (>=2.10.6,<3.0.0)",
  "pydantic[email] (>=2.10.6,<3.0.0)",
  "python-multipart (>=0.0.20,<0.0.21)",
  "asyncpg (>=0.30.0,<0.31.0)",
  "python-dotenv (>=1.0.1,<2.0.0)",
  "sqlalchemy (>=2.0.39,<3.0.0)",
  "databases (>=0.9.0,<0.10.0)",
  "argon2-cffi (>=23.1.0,<24.0.0)",
  "passlib (>=1.7.4,<2.0.0)",
  "celery (>=5.5.1,<6.0.0)",
  "redis (>=5.2.1,<6.0.0)",
  "aiohttp (>=3.11.16,<4.0.0)",
  "opentelemetry-distro (>=0.53b0,<0.54)",
  "opentelemetry-instrumentation-fastapi (==0.53b0)",
  "opentelemetry-instrumentation-sqlalchemy (==0.53b0)",
  "opentelemetry-instrumentation-asyncpg (==0.53b0)",
  "opentelemetry-instrumentation-asyncio (==0.53b0)",
  "opentelemetry-instrumentation-asgi (==0.53b0)",
  "opentelemetry-instrumentation-logging (==0.53b0)",
  "opentelemetry-api (>=1.32.0,<2.0.0)",
  "opentelemetry-sdk (>=1.32.0,<2.0.0)",
  "opentelemetry-exporter-otlp (>=1.32.0,<2.0.0)",
  "pydantic-settings (>=2.9.1,<3.0.0)",
  "parsel (>=1.10.0,<2.0.0)",
  "feedparser (>=6.0.11,<7.0.0)",
  "html2text (>=2025.4.15,<2026.0.0)",
  "openai (>=1.78.1,<2.0.0)",
  "sentry-sdk[fastapi] (>=2.28.0,<3.0.0)",
  "slowapi (>=0.1.9,<0.2.0)",
  "fastapi-radar (>=0.1.5,<0.2.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-asyncio = { extras = ["trio"], version = "^0.25.3" }
httpx = {extras = ["socks"], version = "^0.28.1"}
sqlalchemy = "^2.0.39"
alembic = "^1.15.1"
trio = "^0.29.0"
asgi-lifespan = "^2.1.0"
pytest-cov = "^6.0.0"
pytest-async-sqlalchemy = "^0.2.0"
gevent = "^24.11.1"
pytest-recording = "^0.13.2"


[[tool.poetry.source]]
name = "aliyun"
url = "http://mirrors.aliyun.com/pypi/simple"
priority = "primary"

[tool.ruff]
target-version = "py311"
line-length = 120
indent-width = 4
fix = true

[tool.ruff.lint]
fixable = ["ALL"]
extend-select = ["I", "E", "F"]
ignore = ["E501"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]

asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = "ignore::DeprecationWarning"
addopts = "--cov=app --cov=celery_app --cov-report=html --cov-report=xml"
# https://stackoverflow.com/questions/68826941/python-coverage-for-async-methods
[tool.coverage.run]
concurrency = ["gevent"]
omit = ["app/tracer.py"]
